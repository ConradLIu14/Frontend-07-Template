伪类         最初设计伪类是和连接以及行为有关系
            这些伪类最早就是给超级连接设计的伪类
·连接
    ·:any-link          any-link 可以匹配任何超级连接 注意any-link 是匹配所有超级连接的；
    ·:link:visited      link 只是匹配 没有访问过的超级连接的;visited 表示已经访问过的超级连接
                        一旦使用link 就再也没办法更改除了文字颜色以外的其他属性了。出于安全考虑，一旦改变尺寸就可以通过js api 得知layout 改变
                        从而得知是否 visited 哪些网站，浏览器不再安全。
                        后来 有时候可以设置透明度，然后发现透明度也不行；因为透明度在渲染上非常费时间。通过计算的快慢还是可以找出访问标签
    ·:hover              用户鼠标移动上去之后。
    ·:active             表示激活状态，
    ·:focus
    ·:target             表示连接到当前目标 不是给超级连接用的是给作为锚点的a标签使用的

·树结构的伪类
    ·:empty                                             表示这个元素是否有子元素
    ·:nth-child()                                       是父元素的第几个child 不要写过于复杂的表达式在里面；可以写even odd 3N-1 之类的表达式
    ·:nth-last-child()                                  从后往前数
    ·:first-child:last-child:only-child                 
    后三个标签破坏了CSS的回溯原则；尽量不要使用

逻辑型
    ·:not 伪类
    ·:where:has level4 中的

为了自身HTML 合理性的考虑，也不应该使用过于复杂的 冒号；CSS选择器



    